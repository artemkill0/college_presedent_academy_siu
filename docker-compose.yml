version: "3.9"

services:
  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_DATABASE: mydb
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypass
      MYSQL_ROOT_PASSWORD: rootpass
    ports:
      - "3306:3306"
    volumes:
      - /var/lib/mysql  # анонимный том
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpass"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 5s

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: django_backend
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app/backend
    working_dir: /app/backend
    expose:
      - "8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_HOST=db
      - DATABASE_NAME=mydb
      - DATABASE_USER=myuser
      - DATABASE_PASSWORD=mypass

  frontend-build:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: react_builder
    command: ["npm", "run", "build"]
    volumes:
      - ./frontend/build:/app/frontend/build  # локальная папка вместо именованного тома

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: nginx_proxy
    ports:
      - "80:80"
    volumes:
      - ./frontend/build:/usr/share/nginx/html:ro
    depends_on:
      - backend
      - frontend-build
